{"ast":null,"code":"var _jsxFileName = \"/Users/mint/Sites/BadBankS/src/components/bankform.js\",\n  _s = $RefreshSig$();\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { Formik } from \"formik\";\nimport { InputGroup } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BankForm(_ref) {\n  _s();\n  let {\n    buttonSubmit,\n    handle,\n    fields,\n    initialData,\n    schema\n  } = _ref;\n  const [passwordShown, setPasswordShown] = useState(false);\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    validationSchema: schema,\n    onSubmit: handle,\n    initialValues: initialData,\n    children: _ref2 => {\n      let {\n        handleSubmit,\n        handleChange,\n        touched,\n        isValid,\n        errors,\n        dirty\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        className: \"mb-3\",\n        noValidate: true,\n        onSubmit: handleSubmit,\n        children: [fields.map((elem, index) => {\n          let isPassword = elem.type === 'password';\n          return /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              htmlFor: elem.id,\n              children: elem.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              hasValidation: true,\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: isPassword ? passwordShown ? \"text\" : \"password\" : elem.type,\n                id: elem.id,\n                onChange: handleChange,\n                placeholder: elem.placeholder,\n                isValid: touched[elem.id] && !errors[elem.id],\n                isInvalid: !!errors[elem.id]\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 19\n              }, this), isPassword && /*#__PURE__*/_jsxDEV(Button, {\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: passwordShown ? \"bi bi-eye\" : \"bi bi-eye-slash\",\n                  onClick: togglePasswordVisiblity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 34\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: errors[elem.id]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            disabled: !(isValid && dirty),\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            \"data-testid\": `btn${buttonSubmit.replace(\" \", \"\")}`,\n            children: buttonSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(BankForm, \"bas2Vmn2NzeTgqNkroDd6vpWxAA=\");\n_c = BankForm;\nexport default BankForm;\nvar _c;\n$RefreshReg$(_c, \"BankForm\");","map":{"version":3,"names":["Button","Form","Formik","InputGroup","useState","BankForm","buttonSubmit","handle","fields","initialData","schema","passwordShown","setPasswordShown","togglePasswordVisiblity","handleSubmit","handleChange","touched","isValid","errors","dirty","map","elem","index","isPassword","type","id","placeholder","replace"],"sources":["/Users/mint/Sites/BadBankS/src/components/bankform.js"],"sourcesContent":["import Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport { Formik } from \"formik\";\nimport { InputGroup } from \"react-bootstrap\";\nimport {useState} from \"react\"\n\nfunction BankForm({ buttonSubmit, handle, fields, initialData, schema }) {\n  const [passwordShown, setPasswordShown] = useState(false);\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  return (\n    <Formik\n      validationSchema={schema}\n      onSubmit={handle}\n      initialValues={initialData}\n    >\n      {({ handleSubmit, handleChange, touched, isValid, errors, dirty }) => (\n        <Form className=\"mb-3\" noValidate onSubmit={handleSubmit}>\n          {fields.map((elem, index) => {\n            let isPassword = (elem.type === 'password')\n\n            return (\n              <Form.Group className=\"mb-3\" key={index}>\n                <Form.Label htmlFor={elem.id}>{elem.id}</Form.Label>\n                <InputGroup hasValidation>\n                  <Form.Control\n                    type={isPassword ? (passwordShown ? \"text\" : \"password\") : elem.type}\n                    key={index}\n                    id={elem.id}\n                    onChange={handleChange}\n                    placeholder={elem.placeholder}\n                    isValid={touched[elem.id] && !errors[elem.id]}\n                    isInvalid={!!errors[elem.id]}\n                  />\n                  {isPassword && <Button>\n                  <i className={ passwordShown ? \"bi bi-eye\" : \"bi bi-eye-slash\"} onClick={togglePasswordVisiblity}></i>\n                  </Button>}\n                  <Form.Control.Feedback type=\"invalid\">\n                    {errors[elem.id]}\n                  </Form.Control.Feedback>\n                </InputGroup>\n              </Form.Group>\n            );\n          })}\n          <div className=\"text-center\">\n            <Button\n              disabled={!(isValid && dirty)}\n              type=\"submit\"\n              className=\"btn btn-primary\"\n              data-testid={`btn${buttonSubmit.replace(\" \", \"\")}`}\n            >\n              {buttonSubmit}\n            </Button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport default BankForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}