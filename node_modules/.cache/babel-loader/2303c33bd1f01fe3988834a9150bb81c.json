{"ast":null,"code":"var _jsxFileName = \"/Users/mint/Sites/BadBankS/src/pages/login.js\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { UsersContext } from \"../state/AppState\";\nimport { useToastContext } from \"../state/CustomToast\";\nimport BankForm from \"../components/bankform\";\nimport { BankCard } from \"../components/bankcard\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Login() {\n  _s();\n  const {\n    usersState,\n    actions\n  } = useContext(UsersContext);\n  const addToast = useToastContext();\n  let formFields = [{\n    id: \"Email\",\n    placeholder: \"Enter email\",\n    type: \"email\"\n  }, {\n    id: \"Password\",\n    placeholder: \"Enter password\",\n    type: \"password\"\n  }];\n  let initialValues = {\n    Email: \"\",\n    Password: \"\"\n  };\n  const schema = yup.object().shape({\n    Email: yup.string().email('User must be a valid email').required(),\n    Password: yup.string().required()\n  });\n  function handleLogin(data) {\n    const {\n      result,\n      errorMessage\n    } = actions.login({\n      email: data.Email,\n      password: data.Password\n    });\n    if (result) {\n      addToast({\n        text: 'User logged in',\n        type: 'success'\n      });\n    } else {\n      addToast({\n        text: errorMessage,\n        type: 'error'\n      });\n    }\n  }\n  const renderLoginForm = () => {\n    return /*#__PURE__*/_jsxDEV(BankForm, {\n      buttonSubmit: \"Login\",\n      handle: handleLogin,\n      fields: formFields,\n      initialData: initialValues,\n      schema: schema\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  };\n  const renderLogoutForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container logout\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"User logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Welcome \", usersState.currentUser]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container login\",\n    children: /*#__PURE__*/_jsxDEV(BankCard, {\n      width: \"20rem\",\n      txtcolor: \"black\",\n      header: \"Login\",\n      body: !usersState.currentUser ? renderLoginForm() : renderLogoutForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"FwCsBZ11+hL1qg7t5VwYkGRV4M0=\", false, function () {\n  return [useToastContext];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useContext","UsersContext","useToastContext","BankForm","BankCard","yup","Login","usersState","actions","addToast","formFields","id","placeholder","type","initialValues","Email","Password","schema","object","shape","string","email","required","handleLogin","data","result","errorMessage","login","password","text","renderLoginForm","renderLogoutForm","currentUser"],"sources":["/Users/mint/Sites/BadBankS/src/pages/login.js"],"sourcesContent":["import { useContext } from \"react\";\nimport { UsersContext } from \"../state/AppState\";\nimport { useToastContext} from \"../state/CustomToast\";\nimport  BankForm  from \"../components/bankform\";\nimport { BankCard } from \"../components/bankcard\";\nimport * as yup from \"yup\";\n\nexport function Login() {\n  const { usersState, actions } = useContext(UsersContext);\n  const addToast = useToastContext();\n\n  let formFields = [\n    { id: \"Email\", placeholder: \"Enter email\", type: \"email\" },\n    { id: \"Password\", placeholder: \"Enter password\", type: \"password\" },\n  ];\n\n  let initialValues = {\n    Email: \"\",\n    Password: \"\",\n  };\n\n  const schema = yup.object().shape({\n    Email: yup.string().email('User must be a valid email').required(),\n    Password: yup.string().required()\n  });\n\n  function handleLogin(data) {\n    const {result, errorMessage} = actions.login({ email: data.Email, password: data.Password });\n\n    if (result) {\n      addToast({text: 'User logged in', type: 'success'});\n    }\n    else {\n      addToast({text: errorMessage, type: 'error'})\n    }\n  }\n\n  const renderLoginForm = () => {\n    return (\n      <BankForm\n        buttonSubmit=\"Login\"\n        handle={handleLogin}\n        fields={formFields}\n        initialData={initialValues}\n        schema={schema}\n      />\n    );\n  };\n\n  const renderLogoutForm = () => {\n    return (\n      <div className=\"card-container logout\">\n        <h5>User logged in</h5>\n        <div>Welcome {usersState.currentUser}</div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"card-container login\">\n      <BankCard\n        width=\"20rem\"\n        txtcolor=\"black\"\n        header=\"Login\"\n        body={!usersState.currentUser ? \n            renderLoginForm() : \n            renderLogoutForm()\n        }/>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,eAAe,QAAO,sBAAsB;AACrD,OAAQC,QAAQ,MAAO,wBAAwB;AAC/C,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC;AAE3B,OAAO,SAASC,KAAK,GAAG;EAAA;EACtB,MAAM;IAAEC,UAAU;IAAEC;EAAQ,CAAC,GAAGR,UAAU,CAACC,YAAY,CAAC;EACxD,MAAMQ,QAAQ,GAAGP,eAAe,EAAE;EAElC,IAAIQ,UAAU,GAAG,CACf;IAAEC,EAAE,EAAE,OAAO;IAAEC,WAAW,EAAE,aAAa;IAAEC,IAAI,EAAE;EAAQ,CAAC,EAC1D;IAAEF,EAAE,EAAE,UAAU;IAAEC,WAAW,EAAE,gBAAgB;IAAEC,IAAI,EAAE;EAAW,CAAC,CACpE;EAED,IAAIC,aAAa,GAAG;IAClBC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACZ,CAAC;EAED,MAAMC,MAAM,GAAGZ,GAAG,CAACa,MAAM,EAAE,CAACC,KAAK,CAAC;IAChCJ,KAAK,EAAEV,GAAG,CAACe,MAAM,EAAE,CAACC,KAAK,CAAC,4BAA4B,CAAC,CAACC,QAAQ,EAAE;IAClEN,QAAQ,EAAEX,GAAG,CAACe,MAAM,EAAE,CAACE,QAAQ;EACjC,CAAC,CAAC;EAEF,SAASC,WAAW,CAACC,IAAI,EAAE;IACzB,MAAM;MAACC,MAAM;MAAEC;IAAY,CAAC,GAAGlB,OAAO,CAACmB,KAAK,CAAC;MAAEN,KAAK,EAAEG,IAAI,CAACT,KAAK;MAAEa,QAAQ,EAAEJ,IAAI,CAACR;IAAS,CAAC,CAAC;IAE5F,IAAIS,MAAM,EAAE;MACVhB,QAAQ,CAAC;QAACoB,IAAI,EAAE,gBAAgB;QAAEhB,IAAI,EAAE;MAAS,CAAC,CAAC;IACrD,CAAC,MACI;MACHJ,QAAQ,CAAC;QAACoB,IAAI,EAAEH,YAAY;QAAEb,IAAI,EAAE;MAAO,CAAC,CAAC;IAC/C;EACF;EAEA,MAAMiB,eAAe,GAAG,MAAM;IAC5B,oBACE,QAAC,QAAQ;MACP,YAAY,EAAC,OAAO;MACpB,MAAM,EAAEP,WAAY;MACpB,MAAM,EAAEb,UAAW;MACnB,WAAW,EAAEI,aAAc;MAC3B,MAAM,EAAEG;IAAO;MAAA;MAAA;MAAA;IAAA,QACf;EAEN,CAAC;EAED,MAAMc,gBAAgB,GAAG,MAAM;IAC7B,oBACE;MAAK,SAAS,EAAC,uBAAuB;MAAA,wBACpC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuB,eACvB;QAAA,uBAAcxB,UAAU,CAACyB,WAAW;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACvC;EAEV,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,sBAAsB;IAAA,uBACnC,QAAC,QAAQ;MACP,KAAK,EAAC,OAAO;MACb,QAAQ,EAAC,OAAO;MAChB,MAAM,EAAC,OAAO;MACd,IAAI,EAAE,CAACzB,UAAU,CAACyB,WAAW,GACzBF,eAAe,EAAE,GACjBC,gBAAgB;IACnB;MAAA;MAAA;MAAA;IAAA;EAAE;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,GA/DezB,KAAK;EAAA,QAEFJ,eAAe;AAAA;AAAA,KAFlBI,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module"}