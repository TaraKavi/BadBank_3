{"ast":null,"code":"var _jsxFileName = \"/Users/mint/Sites/BadBankS/src/pages/withdraw.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { UsersContext } from \"../state/AppState\";\nimport { useToastContext } from \"../state/CustomToast\";\nimport { BankCard } from \"../components/bankcard\";\nimport BankForm from \"../components/bankform\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WithDraw = () => {\n  _s();\n  const {\n    usersState,\n    actions\n  } = useContext(UsersContext);\n  const [show, setShow] = useState(true);\n  const addToast = useToastContext();\n  const user = usersState.users.find(elem => elem.email === usersState.currentUser);\n  const handleSubmit = data => {\n    const {\n      result,\n      errorMessage\n    } = actions.withDraw(Number(data.Amount));\n    if (result) {\n      setShow(false);\n      addToast({\n        text: \"Withdraw successfully done\",\n        type: \"success\"\n      });\n    } else {\n      addToast({\n        text: errorMessage,\n        type: \"error\"\n      });\n    }\n    return {\n      result,\n      errorMessage: \"\"\n    };\n  };\n  let formFields = [{\n    id: \"Amount\",\n    placeholder: \"Enter amount\",\n    type: \"input\"\n  }];\n  let initialValues = {\n    Amount: \"\"\n  };\n  const schema = yup.object().shape({\n    Amount: yup.number().test(\"is-decimal\", \"Amount must be a currency\", value => value.toString().match(/^-?\\d+(\\.\\d{1,2})?$/g)).typeError(\"Amount must be a valid number\").min(0.01, \"Amount must be a positive number\").required()\n  });\n  const clearForm = () => {\n    setShow(true);\n  };\n  const renderNewOperation = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: \"Your balance has been updated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          onClick: () => clearForm(),\n          children: \"New operation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  };\n  const renderWithDrawForm = () => {\n    return /*#__PURE__*/_jsxDEV(BankForm, {\n      buttonSubmit: \"WithDraw\",\n      handle: handleSubmit,\n      fields: formFields,\n      initialData: initialValues,\n      schema: schema\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container withdraw\",\n    children: /*#__PURE__*/_jsxDEV(BankCard, {\n      txtcolor: \"black\",\n      header: \"WithDraw\",\n      body: usersState.currentUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"col text-center mb-3\",\n          id: \"total\",\n          children: [\"Balance $\", user.balance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), show ? renderWithDrawForm() : renderNewOperation()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"You must be logged in to use this function\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(WithDraw, \"vaia0KRPiY3dHi6oz/S8gAUdy/Y=\", false, function () {\n  return [useToastContext];\n});\n_c = WithDraw;\nvar _c;\n$RefreshReg$(_c, \"WithDraw\");","map":{"version":3,"names":["useContext","useState","UsersContext","useToastContext","BankCard","BankForm","yup","WithDraw","usersState","actions","show","setShow","addToast","user","users","find","elem","email","currentUser","handleSubmit","data","result","errorMessage","withDraw","Number","Amount","text","type","formFields","id","placeholder","initialValues","schema","object","shape","number","test","value","toString","match","typeError","min","required","clearForm","renderNewOperation","renderWithDrawForm","balance"],"sources":["/Users/mint/Sites/BadBankS/src/pages/withdraw.js"],"sourcesContent":["import { useContext, useState } from \"react\";\nimport { UsersContext } from \"../state/AppState\";\nimport { useToastContext } from \"../state/CustomToast\";\nimport { BankCard } from \"../components/bankcard\";\nimport BankForm from \"../components/bankform\";\nimport * as yup from \"yup\";\n\nexport const WithDraw = () => {\n  const { usersState, actions } = useContext(UsersContext);\n  const [show, setShow] = useState(true);\n  const addToast = useToastContext();\n\n  const user = usersState.users.find(\n    (elem) => elem.email === usersState.currentUser\n  );\n\n  const handleSubmit = (data) => {\n    const { result, errorMessage } = actions.withDraw(Number(data.Amount));\n\n    if (result) {\n      setShow(false);\n      addToast({ text: \"Withdraw successfully done\", type: \"success\" });\n    } else {\n      addToast({ text: errorMessage, type: \"error\" });\n    }\n\n    return { result, errorMessage: \"\" };\n  };\n\n  let formFields = [\n    { id: \"Amount\", placeholder: \"Enter amount\", type: \"input\" },\n  ];\n\n  let initialValues = {\n    Amount: \"\",\n  };\n\n  const schema = yup.object().shape({\n    Amount: yup\n      .number()\n      .test(\"is-decimal\", \"Amount must be a currency\", (value) =>\n        value.toString().match(/^-?\\d+(\\.\\d{1,2})?$/g)\n      )\n      .typeError(\"Amount must be a valid number\")\n      .min(0.01, \"Amount must be a positive number\")\n      .required(),\n  });\n\n  const clearForm = () => {\n    setShow(true);\n  };\n\n  const renderNewOperation = () => {\n    return (\n      <div>\n        <div className=\"mb-3\">Your balance has been updated</div>\n        <div className=\"text-center\">\n          <button type=\"submit\" className=\"btn btn-primary\" onClick={() => clearForm()}>\n            New operation\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  const renderWithDrawForm = () => {\n    return (\n      <BankForm\n        buttonSubmit=\"WithDraw\"\n        handle={handleSubmit}\n        fields={formFields}\n        initialData={initialValues}\n        schema={schema}\n      />\n    );\n  };\n\n  return (\n    <div className=\"card-container withdraw\">\n      <BankCard\n        txtcolor=\"black\"\n        header=\"WithDraw\"\n        body={\n          usersState.currentUser ? (\n            <div>\n              <h3 className=\"col text-center mb-3\" id=\"total\">\n                Balance ${user.balance}\n              </h3>\n              {show ? renderWithDrawForm() : renderNewOperation()}\n            </div>\n          ) : (\n            <div>You must be logged in to use this function</div>\n          )\n        }\n      />\n    </div>\n  );\n};\n"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,eAAe,QAAQ,sBAAsB;AACtD,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC;AAE3B,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAAA;EAC5B,MAAM;IAAEC,UAAU;IAAEC;EAAQ,CAAC,GAAGT,UAAU,CAACE,YAAY,CAAC;EACxD,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMW,QAAQ,GAAGT,eAAe,EAAE;EAElC,MAAMU,IAAI,GAAGL,UAAU,CAACM,KAAK,CAACC,IAAI,CAC/BC,IAAI,IAAKA,IAAI,CAACC,KAAK,KAAKT,UAAU,CAACU,WAAW,CAChD;EAED,MAAMC,YAAY,GAAIC,IAAI,IAAK;IAC7B,MAAM;MAAEC,MAAM;MAAEC;IAAa,CAAC,GAAGb,OAAO,CAACc,QAAQ,CAACC,MAAM,CAACJ,IAAI,CAACK,MAAM,CAAC,CAAC;IAEtE,IAAIJ,MAAM,EAAE;MACVV,OAAO,CAAC,KAAK,CAAC;MACdC,QAAQ,CAAC;QAAEc,IAAI,EAAE,4BAA4B;QAAEC,IAAI,EAAE;MAAU,CAAC,CAAC;IACnE,CAAC,MAAM;MACLf,QAAQ,CAAC;QAAEc,IAAI,EAAEJ,YAAY;QAAEK,IAAI,EAAE;MAAQ,CAAC,CAAC;IACjD;IAEA,OAAO;MAAEN,MAAM;MAAEC,YAAY,EAAE;IAAG,CAAC;EACrC,CAAC;EAED,IAAIM,UAAU,GAAG,CACf;IAAEC,EAAE,EAAE,QAAQ;IAAEC,WAAW,EAAE,cAAc;IAAEH,IAAI,EAAE;EAAQ,CAAC,CAC7D;EAED,IAAII,aAAa,GAAG;IAClBN,MAAM,EAAE;EACV,CAAC;EAED,MAAMO,MAAM,GAAG1B,GAAG,CAAC2B,MAAM,EAAE,CAACC,KAAK,CAAC;IAChCT,MAAM,EAAEnB,GAAG,CACR6B,MAAM,EAAE,CACRC,IAAI,CAAC,YAAY,EAAE,2BAA2B,EAAGC,KAAK,IACrDA,KAAK,CAACC,QAAQ,EAAE,CAACC,KAAK,CAAC,sBAAsB,CAAC,CAC/C,CACAC,SAAS,CAAC,+BAA+B,CAAC,CAC1CC,GAAG,CAAC,IAAI,EAAE,kCAAkC,CAAC,CAC7CC,QAAQ;EACb,CAAC,CAAC;EAEF,MAAMC,SAAS,GAAG,MAAM;IACtBhC,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMiC,kBAAkB,GAAG,MAAM;IAC/B,oBACE;MAAA,wBACE;QAAK,SAAS,EAAC,MAAM;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoC,eACzD;QAAK,SAAS,EAAC,aAAa;QAAA,uBAC1B;UAAQ,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAC,iBAAiB;UAAC,OAAO,EAAE,MAAMD,SAAS,EAAG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAEpE;QAAA;QAAA;QAAA;MAAA,QACL;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAEV,CAAC;EAED,MAAME,kBAAkB,GAAG,MAAM;IAC/B,oBACE,QAAC,QAAQ;MACP,YAAY,EAAC,UAAU;MACvB,MAAM,EAAE1B,YAAa;MACrB,MAAM,EAAES,UAAW;MACnB,WAAW,EAAEG,aAAc;MAC3B,MAAM,EAAEC;IAAO;MAAA;MAAA;MAAA;IAAA,QACf;EAEN,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,yBAAyB;IAAA,uBACtC,QAAC,QAAQ;MACP,QAAQ,EAAC,OAAO;MAChB,MAAM,EAAC,UAAU;MACjB,IAAI,EACFxB,UAAU,CAACU,WAAW,gBACpB;QAAA,wBACE;UAAI,SAAS,EAAC,sBAAsB;UAAC,EAAE,EAAC,OAAO;UAAA,wBACnCL,IAAI,CAACiC,OAAO;QAAA;UAAA;UAAA;UAAA;QAAA,QACnB,EACJpC,IAAI,GAAGmC,kBAAkB,EAAE,GAAGD,kBAAkB,EAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/C,gBAEN;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAEH;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GA1FWrC,QAAQ;EAAA,QAGFJ,eAAe;AAAA;AAAA,KAHrBI,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}