{"ast":null,"code":"var _jsxFileName = \"/Users/mint/Sites/BadBankS/src/state/AppState.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, createContext } from \"react\";\n//Context and Provider\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UsersContext = /*#__PURE__*/createContext();\nconst actions = {\n  ADD_USER: \"ADD_USER\",\n  LOGIN: \"LOGIN\",\n  LOGOUT: \"LOGOUT\",\n  UPDATE_USERS: \"UPDATE_USERS\",\n  SET_ERROR: \"SET_ERROR\"\n};\nconst initialState = {\n  users: [{\n    name: 'abel',\n    email: 'abel@mit.edu',\n    password: 'secret',\n    balance: 100\n  }, {\n    name: 'alvaro',\n    email: 'alvaro@gmail.com',\n    password: 'secret',\n    balance: 100\n  }],\n  currentUser: null,\n  success: false,\n  showError: false,\n  errorMessage: \"\"\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case actions.LOGIN:\n      return {\n        ...state,\n        currentUser: action.payload\n      };\n    case actions.LOGOUT:\n      return {\n        ...state,\n        currentUser: null\n      };\n    case actions.UPDATE_USERS:\n      return {\n        ...state,\n        users: action.payload\n      };\n    default:\n      throw new Error();\n  }\n}\nconst useActions = (state, dispatch) => {\n  const addUser = userInfo => {\n    let currentUser = state.users.find(elem => elem.email === userInfo.email);\n    if (currentUser) {\n      return {\n        result: false,\n        errorMessage: 'User already exists'\n      };\n    }\n    dispatch({\n      type: actions.UPDATE_USERS,\n      payload: [...state.users, userInfo]\n    });\n    return {\n      result: true\n    };\n  };\n  const login = credentials => {\n    let currentUser = state.users.find(elem => elem.email === credentials.email && elem.password === credentials.password);\n    if (!currentUser) {\n      return {\n        result: false,\n        errorMessage: 'Invalid credentials'\n      };\n    }\n    dispatch({\n      type: actions.LOGIN,\n      payload: credentials.email\n    });\n    return {\n      result: true\n    };\n  };\n  const logout = () => {\n    dispatch({\n      type: actions.LOGOUT\n    });\n    return true;\n  };\n  const deposit = amount => {\n    let newUsers = state.users.map(element => {\n      if (element.email === state.currentUser) {\n        element.balance = Math.round((element.balance + amount + Number.EPSILON) * 100) / 100;\n      }\n      return element;\n    });\n    dispatch({\n      type: actions.UPDATE_USERS,\n      payload: newUsers\n    });\n    return {\n      result: true\n    };\n  };\n  const withDraw = amount => {\n    let currentUser = state.users.find(elem => elem.email === state.currentUser);\n    if (currentUser.balance < amount) {\n      return {\n        result: false,\n        errorMessage: 'Not enough funds'\n      };\n    }\n    let newUsers = state.users.map(element => {\n      if (element.email === state.currentUser) {\n        element.balance = Math.round((element.balance - amount + Number.EPSILON) * 100) / 100;\n      }\n      return element;\n    });\n    dispatch({\n      type: actions.UPDATE_USERS,\n      payload: newUsers\n    });\n    return {\n      result: true\n    };\n  };\n  return {\n    addUser,\n    login,\n    logout,\n    withDraw,\n    deposit\n  };\n};\nexport const ContextProvider = props => {\n  _s();\n  const [usersState, dispatch] = useReducer(reducer, initialState);\n  const actions = useActions(usersState, dispatch);\n  const value = {\n    usersState,\n    actions\n  };\n  return /*#__PURE__*/_jsxDEV(UsersContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(ContextProvider, \"Ff72L6hcgmzJkpg0NhRzQ8GMM64=\", false, function () {\n  return [useActions];\n});\n_c = ContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","useReducer","createContext","UsersContext","actions","ADD_USER","LOGIN","LOGOUT","UPDATE_USERS","SET_ERROR","initialState","users","name","email","password","balance","currentUser","success","showError","errorMessage","reducer","state","action","type","payload","Error","useActions","dispatch","addUser","userInfo","find","elem","result","login","credentials","logout","deposit","amount","newUsers","map","element","Math","round","Number","EPSILON","withDraw","ContextProvider","props","usersState","value","children"],"sources":["/Users/mint/Sites/BadBankS/src/state/AppState.js"],"sourcesContent":["import React, {useReducer, createContext} from \"react\";\n//Context and Provider\nexport const UsersContext = createContext();\n\nconst actions = {\n  ADD_USER: \"ADD_USER\",\n  LOGIN: \"LOGIN\",\n  LOGOUT: \"LOGOUT\",\n  UPDATE_USERS: \"UPDATE_USERS\",\n  SET_ERROR: \"SET_ERROR\"\n};\n\nconst initialState = {\n  users:[\n    {\n      name:'abel',\n      email:'abel@mit.edu',\n      password:'secret',\n      balance:100\n    },\n    {\n      name:'alvaro',\n      email:'alvaro@gmail.com',\n      password:'secret',\n      balance:100\n    }\n  ],\n  currentUser: null,\n  success: false,\n  showError: false,\n  errorMessage: \"\"\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case actions.LOGIN:\n      return { ...state, \n        currentUser: action.payload };\n    case actions.LOGOUT:\n      return { ...state, \n        currentUser: null };\n    case actions.UPDATE_USERS:\n      return {...state, users: action.payload}\n    default:\n      throw new Error();\n  }\n}\n\nconst useActions = (state, dispatch) => {\n  const addUser = (userInfo) => {\n    let currentUser = state.users.find( elem => elem.email === userInfo.email)\n    if (currentUser) {\n      return { result : false, errorMessage: 'User already exists'};\n    }\n\n    dispatch({ type: actions.UPDATE_USERS, payload: [...state.users, userInfo] });\n    return {result : true};\n  }\n\n  const login = (credentials) => {\n    let currentUser = state.users.find( elem => elem.email === credentials.email && elem.password === credentials.password)\n\n    if (!currentUser) {\n      return { result : false, errorMessage: 'Invalid credentials'};\n    }\n\n    dispatch({ type: actions.LOGIN, payload: credentials.email })\n    return { result : true};\n  }\n\n  const logout = () => {\n    dispatch({ type: actions.LOGOUT})\n    return true;\n  }\n\n  const deposit = (amount) => {\n    let newUsers = state.users.map( element => {\n      if (element.email === state.currentUser) {\n        element.balance = Math.round(((element.balance + amount) + Number.EPSILON) * 100) / 100\n      }\n      return element;\n    })\n    dispatch({ type: actions.UPDATE_USERS, payload: newUsers })\n    return {result : true};\n  }\n\n  const withDraw = (amount) => {\n    let currentUser = state.users.find( elem => elem.email === state.currentUser)\n\n    if (currentUser.balance < amount) {\n      return {result : false, errorMessage: 'Not enough funds'}\n    }\n\n    let newUsers = state.users.map( element => {\n      if (element.email === state.currentUser) {\n        element.balance = Math.round(((element.balance - amount) + Number.EPSILON) * 100) / 100\n      }\n      return element;\n    })\n    dispatch({ type: actions.UPDATE_USERS, payload: newUsers })\n\n    return {result : true};\n  }\n\n  return {\n    addUser,\n    login,\n    logout,\n    withDraw,\n    deposit\n  }\n\n}\n\nexport const ContextProvider = (props) => {\n  const [usersState, dispatch] = useReducer(reducer, initialState);\n  const actions = useActions(usersState, dispatch);\n  const value = { usersState, actions };\n\n  return (\n    <UsersContext.Provider value={value}>\n      {props.children}\n    </UsersContext.Provider>\n  );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}